server: 
  port: 9001
spring: 
  application:
    # 注册服务的名称，注意服务器名称不能使用下划线连接，可以使用中划线连接
    name: eureka-client-hello-consumer
  cloud:
    # 开启SpringCloud负载均衡中的重试功能，ribbon中整合了（默认是重试到熔断机制的时间），但是zuul整合时需要指定
    loadbalancer:
      retry:
        enabled: false  # 开启Spring Cloud的重试功能
eureka: 
  instance:
    instance-id: hello service consumer 9001 # 显示的实例名称
    prefer-ip-address: true    # 当其它服务获取地址时提供ip而不是hostname
    ip-address: 127.0.0.1 # 指定自己的ip信息，不指定的话会自己寻找
  client: 
    #是否向服务注册中心注册自己 默认true
    register-with-eureka: true
    #是否检索服务 默认true
    fetch-registry: true
    instance: 
      status-page-url-path: /actuator/info
      health-check-url-path: /actuator/health
    service-url: 
      #eureka注册中心服务器地址
      defaultZone: http://127.0.0.1:7001/eureka/



#feign配置 ------
feign:
  hystrix:
    enabled: true   # 开启Feign的熔断功能，不开启feign的降级不生效   , 与hystrix.command.default.execution.timeout.enabled配置功能一致，两者有一个关闭则关闭熔断功能 --
  client:
    config:
      default: # default是全局设置  具体项目配置是项目名称
        #retryer: feign.Retryer.Default
        connectTimeout: 30000
        readTimeout: 10000 # 超时时间,eureka消费者访问eureka上的服务超过多久没有返回则调用自身熔断服务 --



# 请求和响应进行压缩，GZIP压缩，以减少通信过程中的性能损耗
#  compression:
# 开启请求压缩
#    request:
#      enabled: true
## 设置压缩的数据类型
##       mime-types: text/html,application/xml,application/json
##      min-request-size: 2048 # 设置触发压缩的大小下限
## 开启响应压缩
#    response:
#      enabled: true



# ribbon配置 ------
# ribbon 全局配置
ribbon:
  OkToRetryOnAllOperations: true #对所有操作请求都进行重试,默认false(只有get方式会重试)
  # 这个ReadTimeout和ConnectTimeout区别是很大的，ConnectTimeout是指建立连接的时间，如果目标服务宕机或网络故障，那么响应的就是ConnectTimeout，无法连接。
  # 而ReadTimeout则是连接建立后，等待目标服务返回响应的时间，譬如目标服务做了一个复杂操作导致耗时较长，那么会触发ReadTimeout。
  # 重试次数: 1(首次访问) + MaxAutoRetries(重试次数)  + MaxAutoRetriesNextServer(切换服务的首次访问) + MaxAutoRetriesNextServer* MaxAutoRetries(每次切换服务的重试次数)
  ReadTimeout: 100   #负载均衡超时时间，默认值5000 ，是请求处理的超时时间
  ConnectTimeout: 1000 #ribbon请求连接的超时时间，默认值2000 , 是请求连接超时时间
  MaxAutoRetries: 0   #对当前实例的重试次数，默认0
  MaxAutoRetriesNextServer: 0 #对切换实例的重试次数，默认1

# 针对某个服务的riboon配置
# ribbon指定服务配置 app-server是服务名称（eureka中Application的name）
eureka-client-hello-provider:
  ribbon:
    OkToRetryOnAllOperations: true #对所有操作请求都进行重试,默认false
    ReadTimeout: 100   #负载均衡超时时间，默认值5000 ，是请求处理的超时时间
    ConnectTimeout: 1000 #ribbon请求连接的超时时间，默认值2000 , 是请求连接超时时间
    MaxAutoRetries: 0    #对当前实例的重试次数，默认0
    MaxAutoRetriesNextServer: 0 #对切换实例的重试次数，默认1


#hystrix配置 ------
# 设置hystrix的超时时间为6000ms，因为ribbon默认的重试时间和熔断机制的默认时间都是1000毫秒，所以先触发熔断机制。
# 为了让重试机制生效所以熔断机制的默认时间一定要比ribbon的重试时间长
hystrix:
  command:
    default: # default 是feign的全局超时熔断设置
      execution:
        timeout:
          enabled: true # 是否开启超时后熔断功能  --
        isolation:
          thread:
            timeoutInMilliseconds: 6000  # 设置熔断超时时间     与feign的readTimeout设置的超时时间哪个小以哪个为准


#通过下面的配置启用所有的监控端点，默认情况下，这些端点是禁用的
management:
  endpoints:
    web:
      exposure:
        include: "*"


# 日志
logging:
  path: D:/deletemes/logbacks
  config: classpath:config/logback-spring.xml
